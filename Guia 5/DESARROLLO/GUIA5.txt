------------------------------
-- CASO 1
------------------------------


-- ACTIVAMOS LA SALIDA DE DBMS
SET SERVEROUTPUT ON;

-- Crear el directorio de las fotos de los clientes 

CREATE OR REPLACE DIRECTORY fotos_clientes AS 'C:\Imagenes\fotos_clientes';

-- Dar permisos desde el usuario Sys a nuestra conexión
-- GRANT READ, WRITE ON DIRECTORY fotos_clientes TO GUIA5;


-------------------------------------------------

DECLARE
    -- Variables para almacenar y cargar las fotos
    v_blob BLOB;
    v_bfile BFILE;
    
    -- Identificación de la foto
    v_nombre VARCHAR2(100);

    -- Directorio donde se encuentra
    v_directorio VARCHAR2(80);
    
    -- Cursor que recorre las fotos de los Clientes
    CURSOR cur_fotos IS 
    SELECT NRO_CLIENTE, foto 
    FROM cliente 
    FOR UPDATE OF foto;

BEGIN 
    -- Recorrer el cursor y almacenar las fotos
    FOR X IN cur_fotos 
    LOOP
        BEGIN 
        
            --Directorio y nombre del archivo
            v_directorio := 'FOTOS_CLIENTES';
            v_nombre := X.NRO_CLIENTE || '.JPG';
            v_blob :=  X.foto;
            
            -- Proceso de actualización de fotos
            v_bfile := bfilename(v_directorio, v_nombre);
            
            -- blob, bfile
            dbms_lob.OPEN(v_bfile, dbms_lob.lob_readonly);
            dbms_lob.loadfromfile(v_blob, v_bfile, dbms_lob.getlength(v_bfile));
            dbms_lob.CLOSE(v_bfile);

            DBMS_OUTPUT.PUT_LINE(v_nombre || ' ACTUALIZADO!');

        EXCEPTION 
            WHEN OTHERS THEN 
                DBMS_OUTPUT.PUT_LINE('El cliente NRO. ' || X.NRO_CLIENTE ||' no tiene foto.');
        END;
    END LOOP;
EXCEPTION
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('Error en el bloque anónimo.');
END;
/


----------------------------------------------
-- CASO 2
----------------------------------------------

-- VARIABLE BIND 
VARIABLE b_fecha_proceso VARCHAR2(10);


DECLARE
    -- CURSOR 
    CURSOR C1 IS 
        SELECT nro_cliente,
        TO_CHAR(numrun,'999G999G999') || '-'|| DVRUN AS "rut", 
        PNOMBRE || ' ' || SNOMBRE || ' ' || APPATERNO || ' ' || APMATERNO as "nombre",
        COD_TIPO_CLIENTE
        FROM CLIENTE;
    
    -- REGISTRO 
    REG_CLIENTE CLIENTE_TODOSUMA%ROWTYPE;

    -- VARRAY
    TYPE tipo_pesos IS VARRAY(4) OF NUMBER(4) NOT NULL;

    v_arreglo_pesos tipo_pesos DEFAULT tipo_pesos(1200,300,550,700); 

BEGIN

    -- ASIGNAMOS FECHA
    :b_fecha_proceso := ADD_MONTHS(TO_DATE('01/01/2022'),-12);

    -- TRUNCAR TABLA EN TIEMPO DE EJECUCIÓN
    EXECUTE IMMEDIATE 'TRUNCATE TABLE CLIENTE_TODOSUMA';
    COMMIT;

    FOR x IN C1 
    LOOP
        BEGIN

            -- CÁLCULOS

            reg_cliente.NRO_CLIENTE := x.nro_cliente;
            reg_cliente.RUN_CLIENTE := x."rut";
            reg_cliente.NOMBRE_CLIENTE := x."nombre";
            
            SELECT NOMbRe_TIPO_CLIENTE 
            INTO reg_cliente.TIPO_CLIENTE
            FROM TIPO_CLIENTE
            WHERE COD_TIPO_CLIENTE = x.cod_tipo_cliente;

            select NVL(SUM(MONTO_SOLICITADO),0) 
            INTO reg_cliente.MONTO_SOLIC_CREDITOS 
            from CREDITO_CLIENTE 
            WHERE NRO_CLIENTE = X.NRO_CLIENTE
            AND TO_CHAR(FECHA_SOLIC_CRED,'YYYY') = TO_CHAR(TO_DATE(:b_fecha_proceso),'YYYY') ;
           

            -- PESOS NORMALES
            reg_cliente.MONTO_PESOS_TODOSUMA := TRUNC(reg_cliente.MONTO_SOLIC_CREDITOS / 100000) * V_ARREGLO_PESOS(1);

            -- PESOS EXTRA
            IF reg_cliente.MONTO_SOLIC_CREDITOS between 1000001 AND 3000000 THEN
                reg_cliente.MONTO_PESOS_TODOSUMA := reg_cliente.MONTO_PESOS_TODOSUMA + TRUNC(reg_cliente.MONTO_SOLIC_CREDITOS / 100000) * V_ARREGLO_PESOS(2);
            ELSIF reg_cliente.MONTO_SOLIC_CREDITOS between 3000001 AND 6000000 THEN
                reg_cliente.MONTO_PESOS_TODOSUMA := reg_cliente.MONTO_PESOS_TODOSUMA + TRUNC(reg_cliente.MONTO_SOLIC_CREDITOS / 100000) * V_ARREGLO_PESOS(3);
            ELSIF reg_cliente.MONTO_SOLIC_CREDITOS > 6000000 THEN
                reg_cliente.MONTO_PESOS_TODOSUMA := reg_cliente.MONTO_PESOS_TODOSUMA + TRUNC(reg_cliente.MONTO_SOLIC_CREDITOS / 100000) * V_ARREGLO_PESOS(4);
            END IF;
            

            --OBJETIVO

            insert into CLIENTE_TODOSUMA VALUES REG_CLIENTE;

        EXCEPTION
            WHEN OTHERS THEN
                DBMS_OUTPUT.PUT_LINE('Error en el cursor.' || SQLERRM);
        END;
    END LOOP;
END;
/